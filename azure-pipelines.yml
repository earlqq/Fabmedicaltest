name: 0.1.$(Rev:r)

trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'Fabmedical ACR'
  imageRepository: 'content-api'
  containerRegistry: 'fabmedicaleaq.azurecr.io'
  containerRegistryName: 'fabmedicaleaq'
  dockerfilePath: 'content-api/Dockerfile'
  tag: '$(Build.BuildNumber)'
  vmImageName: 'ubuntu-latest'
  k8sNamespace: 'fabmedical-eaq'

stages:
- stage: Build
  displayName: Build and Push
  jobs:  
  - job: Docker
    displayName: Build and Push Docker Image
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
      fetchDepth: 1

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      displayName: Publish to artifacts
      inputs:
        artifactName: 'manifests'
        path: 'manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: 'myenv.ingress-demo' #customize with your environment
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespace)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: |
                api.deployment.yml
                api.service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
